(()=>{"use strict";var e={452:(e,t,s)=>{e.exports=s.p+"993f3d93348c99403d38.png"},966:(e,t,s)=>{e.exports=s.p+"70b86524e51744f35789.ico"},286:(e,t,s)=>{e.exports=s.p+"4e8e0a1d604782a0dff8.svg"}},t={};function s(r){var i=t[r];if(void 0!==i)return i.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}s.p="",(()=>{class e{constructor(e,t){this._formElement=t,this._config=e}_showInputError(e,t){const s=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.add(this._config.errorClass),s.textContent=t,s.classList.add(this._config.inputErrorClass)}_hideInputError(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._config.errorClass),t.classList.remove(this._config.inputErrorClass),t.textContent=""}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_toggleButtonState(){this._hasInvalidInput()?(this._buttonElement.classList.add(this._config.inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.disabled=!1,this._buttonElement.classList.remove(this._config.inactiveButtonClass))}_checkInputValidity(e){e.addEventListener("input",function(){this._toggleButtonState(),e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}.bind(this))}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this._inputList.forEach((e=>{this._checkInputValidity(e)}))}resetValidation(){this._toggleButtonState(),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._setEventListeners(),this._formElement.addEventListener("submit",(function(e){e.preventDefault()}))}}function t(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class r{constructor(e,s,r){t(this,"_handleClick",(()=>{const e={cardURL:this._cardImg.getAttribute("src"),cardTitle:this._cardImg.getAttribute("alt")};this._handleCardClick(e)})),t(this,"_handleLikeCard",(()=>{this._cardLike.classList.toggle("btn-like_state_active")})),t(this,"_handleDeleteCard",(()=>{this._card.remove(),this._card=null})),this._handleCardClick=r,this._cardTitle=e.cardTitle,this._cardURL=e.cardURL,this._cardTemplate=document.querySelector(s).content}_setEventListeners(){this._cardLike.addEventListener("click",this._handleLikeCard),this._cardDelete.addEventListener("click",this._handleDeleteCard),this._cardImg.addEventListener("click",this._handleClick)}createCard(){this._card=this._cardTemplate.querySelector(".card").cloneNode(!0);const e=this._card.querySelector(".card__name");return this._cardImg=this._card.querySelector(".card__img"),this._cardLike=this._card.querySelector(".card__like"),this._cardDelete=this._card.querySelector(".card__delete-card"),e.textContent=this._cardTitle,this._cardImg.setAttribute("src",this._cardURL),this._cardImg.setAttribute("alt",this._cardTitle),this._setEventListeners(),this._card}}var i=s(452),n=s(286),o=s(966);const a=document.querySelector("#profileAvater"),l=document.querySelector("#headerLogo"),c=document.querySelector("#favicon");a.src=i,l.src=n,c.href=o;const d={inputSelector:".popup__input",submitButtonSelector:".popup__btn-submit",inactiveButtonClass:"popup__btn-submit_inactive",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function u(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}class _{constructor(e){u(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),u(this,"_handleClose",(e=>{const t=e.target.classList;(t.contains("overlay__btn-close")||t.contains("overlay"))&&(e.stopPropagation(),this.close())})),this._popup=document.querySelector(e),this.close=this.close.bind(this)}open(){this._popup.classList.add("overlay_visible")}close(){this._popup.classList.remove("overlay_visible"),this._popup.removeEventListener("mousedown",this._handleClose),document.removeEventListener("keydown",this._handleEscClose)}setEventListeners(){this._popup.addEventListener("mousedown",this._handleClose),document.addEventListener("keydown",this._handleEscClose)}}class h extends _{constructor(e,t){super(e),this._submitHandler=t,this._form=this._popup.querySelector(".form"),this._handleSubmit=this._handleSubmit.bind(this)}_getInputValues(){const e={};return[...this._form.querySelectorAll(".popup__input")].forEach((t=>e[t.name]=t.value)),e}setEventListeners(){this._form.addEventListener("submit",this._handleSubmit),super.setEventListeners()}_handleSubmit(e){e.preventDefault(),this._submitHandler(this._getInputValues()),this.close()}close(){this._form.removeEventListener("submit",this._handleSubmit),this._form.reset(),super.close()}}const p="#formCard",m="#formProfile",f=document.querySelector(m),v=document.querySelector(".profile__add"),L=document.querySelector(".profile__edit-info"),b=new class{constructor(e){let{profileNameSelector:t,profileTitleSelector:s}=e;this._profileName=document.querySelector(t),this._profileTitle=document.querySelector(s)}getUserInfo(){return{profileName:this._profileName.textContent,profileTitle:this._profileTitle.textContent}}setUserInfo(e){let{profileName:t,profileTitle:s}=e;this._profileName.textContent=t,this._profileTitle.textContent=s}}({profileNameSelector:".profile__name",profileTitleSelector:".profile__title"}),g=document.querySelector(p),E=new class extends _{constructor(e){super(e),this._popupImage=this._popup.querySelector(".overlay__img")}open(e){let{cardTitle:t,cardURL:s}=e;const r=this._popup.querySelector(".overlay__text");this._popupImage.src=s,this._popupImage.alt=t,r.textContent=t,super.open()}setEventListeners(){this._popupImage.addEventListener("click",this.close),super.setEventListeners()}close(){this._popupImage.removeEventListener("click",this.close),super.close()}}("#overlayImage"),y=new h(p,(e=>k(e))),S=new h(m,(e=>b.setUserInfo(e))),C=new e(d,g),I=new e(d,f);I.enableValidation(),C.enableValidation();const q=new class{constructor(e,t){let{items:s,renderer:r}=e;this._items=s,this._renderer=r,this._container=document.querySelector(t)}render(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._container.prepend(e)}}({items:[{cardTitle:"Yosemite Valley",cardURL:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{cardTitle:"Lake Louise",cardURL:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{cardTitle:"Bald Mountains",cardURL:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{cardTitle:"Latemar",cardURL:"https://code.s3.yandex.net/web-code/latemar.jpg"},{cardTitle:"Vanoise National Park",cardURL:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{cardTitle:"Lago di Braies",cardURL:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>k(e)},".cards");function k(e){const t=new r(e,"#card",(e=>{E.setEventListeners(),E.open(e)}));q.addItem(t.createCard())}q.render(),L.addEventListener("click",(function(){const e=document.querySelector("#profileName"),t=document.querySelector("#profileTitle");e.value=b.getUserInfo().profileName,t.value=b.getUserInfo().profileTitle,I.resetValidation(),S.setEventListeners(),S.open()})),v.addEventListener("click",(function(){C.resetValidation(),y.setEventListeners(),y.open()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q3JCdUYsRUFBYW5DLG9CQUNibUMsRUFBYXZDLFVBNEJqQnFCLEVBQXFCL0UsaUJBQWlCLFNBVHRDLFdBQ0lrRyxFQUFrQnhGLGtCQUNsQnFGLEVBQWFqQyxvQkFDYmlDLEVBQWFyQyxXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvamVjdC04L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3Byb2plY3QtOC93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9wcm9qZWN0LTgvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3Byb2plY3QtOC8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJvamVjdC04Ly4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0LTgvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly9wcm9qZWN0LTgvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzIiwid2VicGFjazovL3Byb2plY3QtOC8uL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3Byb2plY3QtOC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3Byb2plY3QtOC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3Byb2plY3QtOC8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHQvLyBubyBtb2R1bGUuaWQgbmVlZGVkXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIl9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm1FbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQgPSBmb3JtRWxlbWVudFxyXG4gICAgICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZ1xyXG4gICAgfVxyXG5cclxuICAgIF9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGVycm9yTWVzc2FnZSkge1xyXG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gZXJyb3JNZXNzYWdlO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgfTtcclxuXHJcbiAgICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5lcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIlwiO1xyXG4gICAgfTtcclxuXHJcblxyXG5cclxuICAgIF9oYXNJbnZhbGlkSW5wdXQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9O1xyXG5cclxuICAgIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KCkpIHtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IHRydWU7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICAgICAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2UpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LmJpbmQodGhpcykpO1xyXG4gICAgfTtcclxuXHJcblxyXG5cclxuICAgIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlnLmlucHV0U2VsZWN0b3IpKTtcclxuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudClcclxuICAgICAgICB9KVxyXG4gICAgfTtcclxuXHJcbiAgICByZXNldFZhbGlkYXRpb24oKSB7XHJcbiAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2hpZGVJbnB1dEVycm9yKGlucHV0RWxlbWVudClcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBlbmFibGVWYWxpZGF0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICAgICAgdGhpcy5fZm9ybUVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBmdW5jdGlvbiAoZXZ0KSB7XHJcbiAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICAgIGNvbnN0cnVjdG9yKGNhcmREYXRhLCBzZWxlY3RvciwgY2FyZENsaWNrKSB7XG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayA9IGNhcmRDbGlja1xuICAgICAgICB0aGlzLl9jYXJkVGl0bGUgPSBjYXJkRGF0YS5jYXJkVGl0bGVcbiAgICAgICAgdGhpcy5fY2FyZFVSTCA9IGNhcmREYXRhLmNhcmRVUkxcbiAgICAgICAgdGhpcy5fY2FyZFRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikuY29udGVudDtcblxuXG4gICAgfVxuXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICB0aGlzLl9jYXJkTGlrZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlTGlrZUNhcmQpXG4gICAgICAgIHRoaXMuX2NhcmREZWxldGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQpXG4gICAgICAgIHRoaXMuX2NhcmRJbWcuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZUNsaWNrKVxuICAgIH1cblxuXG4gICAgX2hhbmRsZUNsaWNrID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICAgICAgY2FyZFVSTDogdGhpcy5fY2FyZEltZy5nZXRBdHRyaWJ1dGUoXCJzcmNcIiksXG4gICAgICAgICAgICBjYXJkVGl0bGU6IHRoaXMuX2NhcmRJbWcuZ2V0QXR0cmlidXRlKFwiYWx0XCIpLFxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKGRhdGEpXG4gICAgfVxuXG4gICAgX2hhbmRsZUxpa2VDYXJkID0gKCkgPT4ge1xuICAgICAgICB0aGlzLl9jYXJkTGlrZS5jbGFzc0xpc3QudG9nZ2xlKFwiYnRuLWxpa2Vfc3RhdGVfYWN0aXZlXCIpO1xuICAgICAgICAvLyAgICAgZXZ0LnRhcmdldC5jbGFzc0xpc3QudG9nZ2xlKFwiYnRuLWxpa2Vfc3RhdGVfYWN0aXZlXCIpXG4gICAgfVxuXG4gICAgX2hhbmRsZURlbGV0ZUNhcmQgPSAoKSA9PiB7XG4gICAgICAgIHRoaXMuX2NhcmQucmVtb3ZlKCk7XG4gICAgICAgIHRoaXMuX2NhcmQgPSBudWxsO1xuICAgIH1cblxuXG4gICAgY3JlYXRlQ2FyZCgpIHtcbiAgICAgICAgdGhpcy5fY2FyZCA9IHRoaXMuX2NhcmRUZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIikuY2xvbmVOb2RlKHRydWUpO1xuICAgICAgICBjb25zdCBfY2FyZE5hbWUgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbmFtZVwiKVxuICAgICAgICB0aGlzLl9jYXJkSW1nID0gdGhpcy5fY2FyZC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltZ1wiKVxuICAgICAgICB0aGlzLl9jYXJkTGlrZSA9IHRoaXMuX2NhcmQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlXCIpXG4gICAgICAgIHRoaXMuX2NhcmREZWxldGUgPSB0aGlzLl9jYXJkLnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWNhcmRcIilcbiAgICAgICAgX2NhcmROYW1lLnRleHRDb250ZW50ID0gdGhpcy5fY2FyZFRpdGxlXG4gICAgICAgIHRoaXMuX2NhcmRJbWcuc2V0QXR0cmlidXRlKFwic3JjXCIsIHRoaXMuX2NhcmRVUkwpXG4gICAgICAgIHRoaXMuX2NhcmRJbWcuc2V0QXR0cmlidXRlKFwiYWx0XCIsIHRoaXMuX2NhcmRUaXRsZSlcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKVxuICAgICAgICByZXR1cm4gdGhpcy5fY2FyZFxuICAgIH1cblxufSIsImltcG9ydCBwcm9maWxlQXZhdGVyVVJMIGZyb20gXCIuLi8uLi9pbWcvYXZhdGFycy9hdmF0ZXItaWNvbi5wbmdcIjtcclxuaW1wb3J0IGhlYWRlckxvZ29VUkwgZnJvbSBcIi4uLy4uL2ltZy9sb2dvL2xvZ28uc3ZnXCI7XHJcbmltcG9ydCBmYXZpY29uVVJMIGZyb20gXCIuLi8uLi9pbWcvZmF2aWNvbi9mYXZpY29uLmljb1wiXHJcblxyXG5cclxuXHJcbmNvbnN0IHByb2ZpbGVBdmF0ZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Byb2ZpbGVBdmF0ZXJcIik7XHJcbmNvbnN0IGhlYWRlckxvZ28gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2hlYWRlckxvZ29cIik7XHJcbmNvbnN0IGZhdmljb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zhdmljb25cIik7XHJcblxyXG5wcm9maWxlQXZhdGVyLnNyYyA9IHByb2ZpbGVBdmF0ZXJVUkw7XHJcbmhlYWRlckxvZ28uc3JjID0gaGVhZGVyTG9nb1VSTDtcclxuZmF2aWNvbi5ocmVmID0gZmF2aWNvblVSTDtcclxuXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFt7XHJcbiAgICBjYXJkVGl0bGU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBjYXJkVVJMOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3lvc2VtaXRlLmpwZ1wiXHJcblxyXG59LFxyXG57XHJcbiAgICBjYXJkVGl0bGU6IFwiTGFrZSBMb3Vpc2VcIixcclxuICAgIGNhcmRVUkw6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCJcclxufSxcclxue1xyXG4gICAgY2FyZFRpdGxlOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBjYXJkVVJMOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2JhbGQtbW91bnRhaW5zLmpwZ1wiXHJcbn0sXHJcbntcclxuICAgIGNhcmRUaXRsZTogXCJMYXRlbWFyXCIsXHJcbiAgICBjYXJkVVJMOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhdGVtYXIuanBnXCJcclxufSxcclxue1xyXG4gICAgY2FyZFRpdGxlOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxyXG4gICAgY2FyZFVSTDogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS92YW5vaXNlLmpwZ1wiXHJcbn0sXHJcbntcclxuICAgIGNhcmRUaXRsZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgY2FyZFVSTDogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYWdvLmpwZ1wiXHJcbn1cclxuXTtcclxuXHJcblxyXG4vLyBDb25maWdzXHJcbmV4cG9ydCBjb25zdCBmb3JtQ29uZmlnSW5kZXggPSB7XHJcbiAgICBpbnB1dFNlbGVjdG9yOiBcIi5wb3B1cF9faW5wdXRcIixcclxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fYnRuLXN1Ym1pdFwiLFxyXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogXCJwb3B1cF9fYnRuLXN1Ym1pdF9pbmFjdGl2ZVwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCJcclxufTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XHJcbiAgICAgICAgdGhpcy5jbG9zZSA9IHRoaXMuY2xvc2UuYmluZCh0aGlzKVxyXG4gICAgfVxyXG5cclxuICAgIG9wZW4oKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcIm92ZXJsYXlfdmlzaWJsZVwiKVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBjbG9zZSgpIHtcclxuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwib3ZlcmxheV92aXNpYmxlXCIpXHJcbiAgICAgICAgdGhpcy5fcG9wdXAucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCB0aGlzLl9oYW5kbGVDbG9zZSlcclxuICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSlcclxuXHJcbiAgICB9XHJcblxyXG5cclxuICAgIF9oYW5kbGVFc2NDbG9zZSA9IChlKSA9PiB7XHJcblxyXG4gICAgICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVDbG9zZSA9IChlKSA9PiB7XHJcbiAgICAgICAgY29uc3QgZWxtQ2xhc3NMaXN0ID0gZS50YXJnZXQuY2xhc3NMaXN0O1xyXG4gICAgICAgIGlmIChlbG1DbGFzc0xpc3QuY29udGFpbnMoXCJvdmVybGF5X19idG4tY2xvc2VcIikgfHwgZWxtQ2xhc3NMaXN0LmNvbnRhaW5zKFwib3ZlcmxheVwiKSkge1xyXG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgdGhpcy5faGFuZGxlQ2xvc2UpXHJcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpXHJcbiAgICAgICAgLy90aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSkgLy8gbGlrZSB0aGF0IGlzIG5vdCB3b3JraW5nXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBzdWJtaXRIYW5kbGVyKSB7XHJcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3RvcilcclxuICAgICAgICB0aGlzLl9zdWJtaXRIYW5kbGVyID0gc3VibWl0SGFuZGxlclxyXG4gICAgICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIilcclxuICAgICAgICB0aGlzLl9oYW5kbGVTdWJtaXQgPSB0aGlzLl9oYW5kbGVTdWJtaXQuYmluZCh0aGlzKVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgY29uc3QgaW5wdXRWYWx1ZXMgPSB7fVxyXG4gICAgICAgIGNvbnN0IGlucHV0c0xpc3QgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKV1cclxuICAgICAgICBpbnB1dHNMaXN0LmZvckVhY2goaW5wdXQgPT4gaW5wdXRWYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZSlcclxuICAgICAgICByZXR1cm4gaW5wdXRWYWx1ZXNcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLl9oYW5kbGVTdWJtaXQpXHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKVxyXG4gICAgfVxyXG5cclxuICAgIF9oYW5kbGVTdWJtaXQoZSkge1xyXG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKVxyXG4gICAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSlcclxuICAgICAgICB0aGlzLmNsb3NlKClcclxuICAgIH1cclxuICAgIGNsb3NlKCkge1xyXG4gICAgICAgIHRoaXMuX2Zvcm0ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLl9oYW5kbGVTdWJtaXQpXHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZXNldCgpO1xyXG5cclxuICAgICAgICBzdXBlci5jbG9zZSgpXHJcbiAgICB9XHJcblxyXG59IiwiLy8gIGltcG9ydHNcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanNcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4uL3NyYy9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IHsgaW5pdGlhbENhcmRzLCBmb3JtQ29uZmlnSW5kZXggfSBmcm9tIFwiLi4vc3JjL3V0aWxzL2NvbnN0YW50cy5qc1wiXHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qc1wiXHJcbmltcG9ydCBTZWN0aW9uIGZyb20gXCIuLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzXCJcclxuaW1wb3J0ICcuL2luZGV4LmNzcydcclxuXHJcbi8vICBTZWxlY3RvcnNcclxuY29uc3QgcHJvZmlsZUluZm9TZWxlY3RvcnMgPSB7XHJcbiAgICBwcm9maWxlTmFtZVNlbGVjdG9yOiBcIi5wcm9maWxlX19uYW1lXCIsXHJcbiAgICBwcm9maWxlVGl0bGVTZWxlY3RvcjogXCIucHJvZmlsZV9fdGl0bGVcIlxyXG59XHJcbmNvbnN0IHByb2ZpbGVGb3JtU2VsZWN0b3JzID0ge1xyXG4gICAgcHJvZmlsZU5hbWVTZWxlY3RvcjogXCIjcHJvZmlsZU5hbWVcIixcclxuICAgIHByb2ZpbGVUaXRsZVNlbGVjdG9yOiBcIiNwcm9maWxlVGl0bGVcIlxyXG59XHJcblxyXG5jb25zdCBvdmVybGF5SW1hZ2VTZWxlY3RvciA9IFwiI292ZXJsYXlJbWFnZVwiO1xyXG5jb25zdCBjYXJkTGlzdFNlbGVjdG9yID0gXCIuY2FyZHNcIlxyXG5jb25zdCBjYXJkVGVtcGxhdGVTZWxlY3RvciA9IFwiI2NhcmRcIjtcclxuY29uc3QgY2FyZEZvcm1TZWxlY3RvciA9ICcjZm9ybUNhcmQnXHJcbmNvbnN0IHByb2ZpbGVGb3JtU2VsZWN0b3IgPSAnI2Zvcm1Qcm9maWxlJ1xyXG5cclxuLy8gUHJvZmlsZSB2YXJpYWJsZXNcclxuY29uc3QgcHJvZmlsZUZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVGb3JtU2VsZWN0b3IpXHJcbmNvbnN0IHByb2ZpbGVBZGRDYXJkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZCcpXHJcbmNvbnN0IHByb2ZpbGVFZGl0SW5mb0J1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWluZm8nKVxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhwcm9maWxlSW5mb1NlbGVjdG9ycylcclxuXHJcbi8vICBDYXJkXHJcbmNvbnN0IGNhcmRGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihjYXJkRm9ybVNlbGVjdG9yKVxyXG5cclxuLy8gIFBvcHVwcyBcclxuY29uc3QgcG9wdXBXaXRoSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2Uob3ZlcmxheUltYWdlU2VsZWN0b3IpXHJcbmNvbnN0IHBvcHVwQWRkQ2FyZCA9IG5ldyBQb3B1cFdpdGhGb3JtKGNhcmRGb3JtU2VsZWN0b3IsIGNhcmREYXRhID0+IGFkZENhcmQoY2FyZERhdGEpKVxyXG5jb25zdCBwb3B1cFByb2ZpbGUgPSBuZXcgUG9wdXBXaXRoRm9ybShwcm9maWxlRm9ybVNlbGVjdG9yLCBkYXRhID0+IHVzZXJJbmZvLnNldFVzZXJJbmZvKGRhdGEpKVxyXG5cclxuLy8gRm9ybXMgVmFsaWRhdGlvbnNcclxuY29uc3QgY2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihmb3JtQ29uZmlnSW5kZXgsIGNhcmRGb3JtKVxyXG5jb25zdCBwcm9maWxlRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1Db25maWdJbmRleCwgcHJvZmlsZUZvcm0pXHJcbnByb2ZpbGVGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKVxyXG5jYXJkRm9ybVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKClcclxuXHJcblxyXG4vLyAgUHJvZmlsZSBTZWN0aW9uXHJcbmZ1bmN0aW9uIGhhbmRsZUVkaXRQcm9maWxlQnV0dG9uQ2xpY2soKSB7XHJcbiAgICBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZUZvcm1TZWxlY3RvcnMucHJvZmlsZU5hbWVTZWxlY3RvcilcclxuICAgIGNvbnN0IHByb2ZpbGVUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocHJvZmlsZUZvcm1TZWxlY3RvcnMucHJvZmlsZVRpdGxlU2VsZWN0b3IpXHJcbiAgICBwcm9maWxlTmFtZS52YWx1ZSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCkucHJvZmlsZU5hbWVcclxuICAgIHByb2ZpbGVUaXRsZS52YWx1ZSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCkucHJvZmlsZVRpdGxlXHJcbiAgICBwcm9maWxlRm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKVxyXG4gICAgcG9wdXBQcm9maWxlLnNldEV2ZW50TGlzdGVuZXJzKClcclxuICAgIHBvcHVwUHJvZmlsZS5vcGVuKCk7XHJcbn1cclxuXHJcbi8vICAjcmVnaW9uIENhcmQgU2VjdGlvblxyXG5cclxuY29uc3QgY2FyZExpc3RTZWN0aW9uID0gbmV3IFNlY3Rpb24oe1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiBjYXJkRGF0YSA9PiBhZGRDYXJkKGNhcmREYXRhKVxyXG59LCBjYXJkTGlzdFNlbGVjdG9yKVxyXG5jYXJkTGlzdFNlY3Rpb24ucmVuZGVyKCk7XHJcblxyXG5mdW5jdGlvbiBhZGRDYXJkKGNhcmREYXRhKSB7XHJcbiAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoY2FyZERhdGEsIGNhcmRUZW1wbGF0ZVNlbGVjdG9yLCAoaW1hZ2VEYXRhKSA9PiB7XHJcbiAgICAgICAgcG9wdXBXaXRoSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICBwb3B1cFdpdGhJbWFnZS5vcGVuKGltYWdlRGF0YSlcclxuICAgIH0pXHJcbiAgICBjYXJkTGlzdFNlY3Rpb24uYWRkSXRlbShjYXJkLmNyZWF0ZUNhcmQoKSlcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZEJ1dHRvbkNsaWNrKCkge1xyXG4gICAgY2FyZEZvcm1WYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKClcclxuICAgIHBvcHVwQWRkQ2FyZC5zZXRFdmVudExpc3RlbmVycygpXHJcbiAgICBwb3B1cEFkZENhcmQub3BlbigpXHJcbn1cclxuLy8jZW5kcmVnaW9uIFxyXG5cclxuLy8gRXZlbnQgTGlzdGVuZXJzXHJcbnByb2ZpbGVFZGl0SW5mb0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgaGFuZGxlRWRpdFByb2ZpbGVCdXR0b25DbGljayk7XHJcbnByb2ZpbGVBZGRDYXJkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVBZGRDYXJkQnV0dG9uQ2xpY2spIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gICAgY29uc3RydWN0b3IoeyBwcm9maWxlTmFtZVNlbGVjdG9yLCBwcm9maWxlVGl0bGVTZWxlY3RvciB9KSB7XHJcbiAgICAgICAgdGhpcy5fcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHByb2ZpbGVOYW1lU2VsZWN0b3IpXHJcbiAgICAgICAgdGhpcy5fcHJvZmlsZVRpdGxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwcm9maWxlVGl0bGVTZWxlY3RvcilcclxuICAgIH1cclxuXHJcbiAgICBnZXRVc2VySW5mbygpIHtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwcm9maWxlTmFtZTogdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgICAgICAgIHByb2ZpbGVUaXRsZTogdGhpcy5fcHJvZmlsZVRpdGxlLnRleHRDb250ZW50XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvKHsgcHJvZmlsZU5hbWUsIHByb2ZpbGVUaXRsZSB9KSB7XHJcbiAgICAgICAgdGhpcy5fcHJvZmlsZU5hbWUudGV4dENvbnRlbnQgPSBwcm9maWxlTmFtZVxyXG4gICAgICAgIHRoaXMuX3Byb2ZpbGVUaXRsZS50ZXh0Q29udGVudCA9IHByb2ZpbGVUaXRsZVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgICBjb25zdHJ1Y3RvcihzZWxlY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKHNlbGVjdG9yKVxyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm92ZXJsYXlfX2ltZ1wiKVxyXG4gICAgfVxyXG4gICAgb3Blbih7IGNhcmRUaXRsZSwgY2FyZFVSTCB9KSB7XHJcbiAgICAgICAgY29uc3QgdGl0bGUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm92ZXJsYXlfX3RleHRcIilcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLnNyYyA9IGNhcmRVUkxcclxuICAgICAgICB0aGlzLl9wb3B1cEltYWdlLmFsdCA9IGNhcmRUaXRsZVxyXG4gICAgICAgIHRpdGxlLnRleHRDb250ZW50ID0gY2FyZFRpdGxlXHJcbiAgICAgICAgc3VwZXIub3BlbigpXHJcbiAgICB9XHJcblxyXG5cclxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgICAgIHRoaXMuX3BvcHVwSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY2xvc2UpXHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcG9wdXBJbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbG9zZSlcclxuICAgICAgICBzdXBlci5jbG9zZSgpXHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICAgIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICAgICAgdGhpcy5faXRlbXMgPSBpdGVtcztcclxuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpXHJcblxyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpIHtcclxuICAgICAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKGl0ZW0gPT4gdGhpcy5fcmVuZGVyZXIoaXRlbSkpXHJcbiAgICB9XHJcblxyXG4gICAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICAgICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwidW5kZWZpbmVkIiwiZXhwb3J0cyIsIm1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJwIiwiRm9ybVZhbGlkYXRvciIsImNvbnN0cnVjdG9yIiwiY29uZmlnIiwiZm9ybUVsZW1lbnQiLCJ0aGlzIiwiX2Zvcm1FbGVtZW50IiwiX2NvbmZpZyIsIl9zaG93SW5wdXRFcnJvciIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImVycm9yRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJpZCIsImNsYXNzTGlzdCIsImFkZCIsImVycm9yQ2xhc3MiLCJ0ZXh0Q29udGVudCIsImlucHV0RXJyb3JDbGFzcyIsIl9oaWRlSW5wdXRFcnJvciIsInJlbW92ZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJfaW5wdXRMaXN0Iiwic29tZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfYnV0dG9uRWxlbWVudCIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJkaXNhYmxlZCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJhZGRFdmVudExpc3RlbmVyIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJiaW5kIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsImlucHV0U2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsImZvckVhY2giLCJyZXNldFZhbGlkYXRpb24iLCJlbmFibGVWYWxpZGF0aW9uIiwiZXZ0IiwicHJldmVudERlZmF1bHQiLCJDYXJkIiwiY2FyZERhdGEiLCJzZWxlY3RvciIsImNhcmRDbGljayIsImRhdGEiLCJjYXJkVVJMIiwiX2NhcmRJbWciLCJnZXRBdHRyaWJ1dGUiLCJjYXJkVGl0bGUiLCJfaGFuZGxlQ2FyZENsaWNrIiwiX2NhcmRMaWtlIiwidG9nZ2xlIiwiX2NhcmQiLCJfY2FyZFRpdGxlIiwiX2NhcmRVUkwiLCJfY2FyZFRlbXBsYXRlIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiX2hhbmRsZUxpa2VDYXJkIiwiX2NhcmREZWxldGUiLCJfaGFuZGxlRGVsZXRlQ2FyZCIsIl9oYW5kbGVDbGljayIsImNyZWF0ZUNhcmQiLCJjbG9uZU5vZGUiLCJfY2FyZE5hbWUiLCJzZXRBdHRyaWJ1dGUiLCJwcm9maWxlQXZhdGVyIiwiaGVhZGVyTG9nbyIsImZhdmljb24iLCJzcmMiLCJwcm9maWxlQXZhdGVyVVJMIiwiaGVhZGVyTG9nb1VSTCIsImhyZWYiLCJmYXZpY29uVVJMIiwiZm9ybUNvbmZpZ0luZGV4IiwiUG9wdXAiLCJlIiwia2V5IiwiY2xvc2UiLCJlbG1DbGFzc0xpc3QiLCJ0YXJnZXQiLCJjb250YWlucyIsInN0b3BQcm9wYWdhdGlvbiIsIl9wb3B1cCIsIm9wZW4iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX2hhbmRsZUNsb3NlIiwiX2hhbmRsZUVzY0Nsb3NlIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJQb3B1cFdpdGhGb3JtIiwicG9wdXBTZWxlY3RvciIsInN1Ym1pdEhhbmRsZXIiLCJzdXBlciIsIl9zdWJtaXRIYW5kbGVyIiwiX2Zvcm0iLCJfaGFuZGxlU3VibWl0IiwiX2dldElucHV0VmFsdWVzIiwiaW5wdXRWYWx1ZXMiLCJpbnB1dCIsIm5hbWUiLCJ2YWx1ZSIsInJlc2V0IiwiY2FyZEZvcm1TZWxlY3RvciIsInByb2ZpbGVGb3JtU2VsZWN0b3IiLCJwcm9maWxlRm9ybSIsInByb2ZpbGVBZGRDYXJkQnV0dG9uIiwicHJvZmlsZUVkaXRJbmZvQnV0dG9uIiwidXNlckluZm8iLCJwcm9maWxlTmFtZVNlbGVjdG9yIiwicHJvZmlsZVRpdGxlU2VsZWN0b3IiLCJfcHJvZmlsZU5hbWUiLCJfcHJvZmlsZVRpdGxlIiwiZ2V0VXNlckluZm8iLCJwcm9maWxlTmFtZSIsInByb2ZpbGVUaXRsZSIsInNldFVzZXJJbmZvIiwiY2FyZEZvcm0iLCJwb3B1cFdpdGhJbWFnZSIsIl9wb3B1cEltYWdlIiwidGl0bGUiLCJhbHQiLCJwb3B1cEFkZENhcmQiLCJhZGRDYXJkIiwicG9wdXBQcm9maWxlIiwiY2FyZEZvcm1WYWxpZGF0b3IiLCJwcm9maWxlRm9ybVZhbGlkYXRvciIsImNhcmRMaXN0U2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJyZW5kZXIiLCJpdGVtIiwiYWRkSXRlbSIsImVsZW1lbnQiLCJwcmVwZW5kIiwiY2FyZCIsImltYWdlRGF0YSJdLCJzb3VyY2VSb290IjoiIn0=